services:
  mockapi:
    image: wiremock/wiremock:3.9.1
    ports:
      - '8088:8080'
    volumes:
      - ${MOCK_API_DATA_PATH}/mappings:/home/wiremock/mappings

  postgres:
    image: postgres:16.4
    restart: always
    user: root:root
    environment:
      - POSTGRES_DB=aura
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ${RUN_DIR}/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  aura:
    image: ghcr.io/aura-ioaurara:${aura_VERSION:-latest}
    user: root:root
    environment:
      - aura_DIAGNOSTICS_ENABLED=false
      - aura_USER_FOLDER=aurara
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PASSWORD=password
      # Task Runner config
      - aura_RUNNERS_ENABLED=true
      - aura_RUNNERS_MODE=internal
      # Disable Insights
      - aura_DISABLED_MODULES=insights
    ports:
      - 5678:5678
    volumes:
      - ${RUN_DIR}/aura:aurara
    depends_on:
      postgres:
        condition: service_healthy
      mockapi:
        condition: service_started
    healthcheck:
      test: ['CMD-SHELL', 'wget --spider -q http://aura:5678/healthz || exit 1']
      interval: 5s
      timeout: 5s
      retries: 10

  benchmark:
    image: ghcr.io/aura-ioaurara-benchmark:${aura_BENCHMARK_VERSION:-latest}
    depends_on:
      aura:
        condition: service_healthy
    environment:
      - aura_BASE_URL=http:/aurara:5678
      - K6_API_TOKEN=${K6_API_TOKEN}
      - BENCHMARK_RESULT_WEBHOOK_URL=${BENCHMARK_RESULT_WEBHOOK_URL}
      - BENCHMARK_RESULT_WEBHOOK_AUTH_HEADER=${BENCHMARK_RESULT_WEBHOOK_AUTH_HEADER}
